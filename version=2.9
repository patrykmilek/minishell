version 2.2
dodałem wsyztskie builtins ktore działaja na tokenach i sa przystosowane do rozbudowy o nowe funkjonalnosci takie jak pipe itp.
dodałem te funkcje do tokenizera która dodaje w struc t_env pointer do *next
wszystko smiga fajnie pieknie oprocz export VAR="test string". Tokenizer traktuje VAR="value jako jeden parametr i string" jako drugi
wiec trzeba zmienić aby traktował VAR="test string" jako jeden argument. najprawdopodobniej trzeba dodac logike do tokenizera ktora patrzy czy przed " jest =
i jesli sie pojawia to traktuje calosc jako jeden argument
nie zwracaj uwagi na za dluga funkcje execute_commands() - ona bedzie zmieniona jak wprowadze całą funkcjonalnosc bo i tak trzeba bedzie ja przebudować i dostosować do nowego kodu.

co trzeba zrobic w builtins:
	-naprawić VAR="test string" - w tokenizer
	-dodac do echo wyswietlanie var w srodowisku np "echo &HOME"

jakbys chcial przetestowac jak to dziala to tu masz funkcje

echo:
	echo Hello, World!
	echo
	echo -n "No new line"
	echo -n Hello -n World

pwd:
	pwd

cd:
	cd ..
	cd /
	cd ~
	cd -
	cd "/path/path/path"
	cd nazwa_folderu
	cd zla_nazwa

env:
	env

export:
	export TEST_VAR=TEST_VALUE
	export TEST_VAR
	export bledna_nazwa - kazda nazwa musi zaczyac sie litera lub _ i nie posiadac znakow specjalnych
	export - pokazuje env posortowane;

unset:
	unset NAZWA_VAR
	unset NAZWA_VAR NAZWA_VAR - usuwanie kilku

exit:
	exit


version 2.3
	praktycznie nic sie nie zmienilo poza tym ze echo dziala poprawnie juz z obsluga np $HOME

version 2.4
	juz dzialaja wyszstkie funkcje takie jak "ls", "ls -l", "make" itp.

version 2.5
	- poprawilem to o czym pisales
	- dodalem historie
	- dodalem sygnaly i skroty klawiszowe
	- norminette OK w tokenizer i signals
	- poprawilem main, zeby obslugiwal sygnaly i historie
	- jakbys cos wychwycil, ze nie dziala przy testowaniu daj znac, do poniedzialku wlacznie jestem przy lapku, pozniej wtorek - czwartek mnie nie ma 

version 2.6
	redirekcje i potoki działaja, norminette sprawdzony (poza debug.c, który i tak jest do wyjebanie przed oddaniem
	oraz minishell.c).
	do zrobienia:
		- sprawdzenie poprawnosci wpisanego prompta np. "ls || sort" lub "| ls". aktualnie kod wywala memory leak
			jesli 2 operatory są obok siebie lub jeśli skladnia linji sie nie zgadza.
		- sprawdzenie calosci pod katem bledow i norminette
		- zastaniowienie sie co dalej i co potrzeba aby wykonac caly projekt
		- sprawdzic projekt pod wzgledem zwracanych błedow tak aby wypisywal to samo co shell
	rob test ja tez bede robil i jak znajdziemy jakis blad dajmy sobie znac.
version 2.7
	do poprawy:

	1. po wrzucenia polecenia hello&&ls mamy:
		minishell> hello&&ls
		minishell: hello&&ls: command not found
	a powinnismy miec:
		pmilek@LAPTOP-9Q025E88:~/42/minishell/src/tokenizer$ hello&&ls
		-bash: hello: command not found
	czyli obsluga znakow zakazanych.

	2. poprawa main (dlugosc funkcji i norminette w calym minishell.c)
	3. testowanie

	ogarniete i poprawione potoki (|| nie musi dzialac, bo to w bonusie)
	ogarniete wystepowanie potoku na poczatku polecenia (| ls)
	ogarniete wystapienie niezamknietego "" (dziala tak jak w bashu)
	ogarniete norminette wszedzie oprocz maina
	testowalem 50 roznymi poleceniami i w zasadzie tylko do poprawy main i znaki zakazane, ale to jeszcze do sprawdzenia

version 2.8
	chyba wszystko jest gotowe. teraz trzeba testowac i mozna oddac.

version 2.9
	naprawilem redirekcje
